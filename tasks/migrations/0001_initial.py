# Generated by Django 3.2.4 on 2021-06-10 05:23

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('in_club_name', models.CharField(blank=True, max_length=70)),
                ('department', models.CharField(blank=True, choices=[('HR', 'Human Resources')], max_length=50)),
                ('designation', models.CharField(blank=True, choices=[('General Member', 'General Member'), ('Executive', 'Executive'), ('Senior Executive', 'Senior Executive'), ('Assistant Director', 'Assistant Director'), ('Director', 'Director')], max_length=20)),
                ('display_picture', models.ImageField(blank=True, null=True, upload_to='')),
                ('status', models.BooleanField(blank=True, choices=[(0, 'Free'), (1, 'Busy')], default=1, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('hr_points', models.IntegerField(blank=True, default=0, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_name', models.CharField(max_length=100)),
                ('assign_date', models.DateField(blank=True, default=datetime.datetime.now)),
                ('last_date', models.DateField(blank=True, default=datetime.datetime.now)),
                ('description', models.CharField(blank=True, max_length=1000)),
                ('url', models.URLField(max_length=100, null=True)),
                ('status', models.BooleanField(choices=[(0, 'On going'), (1, 'Done')], null=True)),
                ('assign_status', models.BooleanField(choices=[(0, 'Unasigned'), (1, 'Assigned')], default=0, null=True)),
                ('code', models.CharField(max_length=8, null=True, unique=True)),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tasks.user')),
            ],
        ),
    ]
